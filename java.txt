자바스크립트 언어
기본적으로 위에서 아래 왼쪽에서 오른쪽으로 해석
; 사용하거나 줄바꿈으로 문장을 추가한다

script태그는 어디에서든 사용할 수 있다

-문자: "",'',`` / 문자데이터는 +를 통해서 서로 이어줄 수 있다
ex)alert("정예은" + "님" + " " + "환영합니다")

-숫자: +,-,*,/,%(나머지연산) /숫자데이터는 문자데이터와 더해질 때 결과적으로 문자가 된다
ex)alert(10 + 20 + "30" + 40)
    alert(303040)

-------------------------------------------------------------------------

typeof()
괄호안의 데이터가 문자인지 숫자인지를 검사하고 검사한 결과를 그 자리에
(typeof()도구가 실행된 자리) 남겨주는 도구 >number or string


prompt()
홈페이지의 사용자에게 괄호 안의 질문을 하고 사용자가 입력한 대답을 
그 자리에 문자데이터 형태로 남기는 도구


Number()
Number()도구는 괄호 안에 들어간 숫자비스무리한 문자데이터를 
숫자데이터로 변경하여 그 자리에 남긴다


document.write()
document.write()도구는 괄호 안에 들어간 데이터를 
body태그에 그대로 필기해주는 도구이다


-----------------------------------------------------------------------

상수 - 고의적으로 수정하지 않는 한 제 스스로 변하지 않는 수

변수 - 변할 가능성이 있는 수 , 자바스크립트의 데이터를 저장할 수 있는 메모리공간

let a; >변수를 선언(생성), 아무것도 들어있지 않은 비어있는 공간
a = 1; >변수를 초기화
alert(a); > 1이 나온다
let b = 20; >선언과 초기화를 축약해서 동시에 지정해줄 수도 있다
b = 30; > 변수를 변경 
alert(b); > 30이 나온다 변수는 변한다
alert(b + a); >31


------------------------------------------------------------------------

변수의 종류

let - 동일한 변수명을 허용하지 않는다. ->가장 많이 사용
var - 동일한 변수명을 허용한다.
const - 변수를 초기화한 이후 다른 값으로 대체하지 못하게 만든 상수형 변수
  const num1 = 30;
           num1 = 40;
           alert(num1)
           const를 사용해서 이미 30으로 정해줬기 때문에 40으로 변경이 적용
           되지않고 알림창에 아무 것도 뜨지않는다


------------------------------------------------------------------

${}을 사용하려면 무조건 백틱``을 써줘야한다

-------------------------------------------------------------------

boolean
참 거짓의 값을 가지고 있는 데이터 형태
비교를 통한 참거짓
부등식의 비교를 통하여 참거짓의 결과를 나타낼 수 있다.
!는 부정의 의미로(not)상황을 역전시킨다


alert(3 < 2)
alert(10 >= 10)//10은 10보다 크거나 같다
alert(10 <= 10)//10은 10보다 작거나 같다
alert(10 == 10)//10은 10과 같다
alert(10 != 10)//10은 10과 같지않다
alert(10 === 10)//10은 10과 완전히 같다



false로 간주(취급)되는 경우

-숫자데이터인데 0인 경우
-문자데이터인데 빈문자인 경우
-변수메모리는 있는데 초기화를 하지않은 경우의 변수

0 false로 간주
1 true로 간주
"" false로 간주
"test" true로 간주(문자가 있다)
let a; false로 간주 값을 정해주지 않았기 때문에

-----------------------------------------------------------------------


논리연산자 

&&연산자(and연산자)
&&연산자는 '그리고'라고 해석을 하며 && 좌우로 
둘다 true여야 전체를 true로 계산한다

ex)나이가 20살이상 35살미만만 true로 계산될 수 있도록
    alert(age >= 20 && age < 35)


||연산자(or연산자)
||연산자는 '또는'라고 해석을 하며 ||좌우로 하나라도 true라면 
전체를 true로 계산한다
 
ex) alert(4 > 1 || 2 > 10)  >true


------------------------------------------------------------------------

삼항연산자

조건 ? 조건의 결과가 참일 때 남는 값:조건의 결과가 거짓일 때 남는 값
ex) alert(5 > 3 ? "열심히하자" : "좀만자자") >열심히하자

alert(50 > 20 ? 30 : 40 > 20 ? 20 : 30 > 20 ? 10 : 0) > 30 

------------------------------------------------------------------------

수학관련도구(Math객체함수)
수학적인 계산을 한 후 결과를 그 자리에 남기는 도구

console.log(Math.round(96.666666)) //반올림도구 >97
console.log(Math.ceil(96.11111)) //올림 >97
console.log(Math.floor(50.99999)) //내림 >50
console.log(Math.pow(2, 3)) //2의 3제곱 >8
console.log(Math.sqrt(100)) //100의 제곱근(루트) > 10
console.log(Math.abs(-1000)) //절대값 >1000
console.log(Math.min(1, 2, 3, 4, 5, -2)) // 최소값 구하기 >-2
console.log(Math.max(2, 4, 100)) // 최대값 구하기 >100
console.log(Math.round(Math.random() * 5)) >

Math.randomdms 0보다 크고 1보다 작은 랜덤한 수를 뜻함. 
*5를 할 경우 0~5 사이의 반올림된 어떤 수를 뜻함


let r = Math.round(Math.random() * 255)
let g = Math.round(Math.random() * 255)
let b = Math.round(Math.random() * 255)
console.log(r, g, b)
document.write(`<h1 style="background:rgb(${r},${g},${b})">반갑습니다!</h1>`)
>배경색을 랜덤으로 바꿔준다

---------------------------------------------------------------------

let grade = scoreAver >= 90 ? "A" :
      scoreAver >= 80 ? "B" :
        scoreAver >= 70 ? "C" : "D"

삼항연산자

-----------------------------------------------------------------------

조건문

조건에 따라 실행하는 구문
기본형태 - if(조건){실행할 소스코드}
괄호 안의 조건의 결과가 참인경우 중괄호안의 소스코드를 실행


if(조건){소스코드1}else{소스코드2}
조건이 참이라면 소스코드1을 해석하고 <그렇지않다면> 소스코드2를 해석한다.
else구문은 선택적으로 사용할 수 있으며 앞에서 제시한 경우의 
정반대의 경우를 내포하고있다.

if(조건){소스코드1}else if(조건2){소스코드2}else{소스코드3}
만약 조건1이 참이라면 소스코드1을 실행 <그렇지않다면 만약> 
조건2가 참이라면 소스코드2를 실행 그렇지않다면 소스코드3을 실행
순차적으로 조건을 비교해나가면서 한번이라도 조건을 만족하면 
다음 경우를 해석하지 않는다.

ex)
if (id == "green" && pw == "1004") {
       alert("로그인되었습니다.")
     } else {
       alert("계정정보가 맞지않습니다.")
     }


 let weight = 50;
    if (weight > 100) {
      alert("비만")
    } else if (weight > 80) {
      alert("과체중")
    } else if (weight > 60) {
      alert("정상")
    } else {
      alert("저체충")
    }


-----------------------------------------------------------------------

반복문

조건이 참인동안 소스코드를 반복한다. 조건이 거짓이 될 때 반복이 멈춘다.
의도한 횟수만큼 반복을 시키기위한 구성요소
반복의 조건 / 반복에 사용될 변수 / 반복에 사용될 변수의 증감식


while반복문
:while(조건){반복할 소스코드}




